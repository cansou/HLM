<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ye.business.hx.dao.IInformedConsentDao" >
  <resultMap id="BaseResultMap" type="com.ye.business.hx.domain.InformedConsent" >
    <id column="CODE" property="code" jdbcType="VARCHAR" />
    <result column="TITLE" property="title" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="DATE" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="REMARK2" property="remark2" jdbcType="VARCHAR" />
    <result column="REMARK3" property="remark3" jdbcType="VARCHAR" />
    <result column="REMARK4" property="remark4" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap type="com.ye.business.hx.dto.InformedConsentDto" id="findResultMap" extends="BaseResultMap"></resultMap>
  
  <resultMap id="ResultMapWithBLOBs" type="com.ye.business.hx.domain.InformedConsent" extends="BaseResultMap" >
    <result column="CONTENT" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    CODE, TITLE, CREATE_DATE, REMARK, REMARK2, REMARK3, REMARK4
  </sql>
  <sql id="Blob_Column_List" >
    CONTENT
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from informed_consent
    where CODE = #{code,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from informed_consent
    where CODE = #{code,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ye.business.hx.domain.InformedConsent" >
    insert into informed_consent (CODE, TITLE, CREATE_DATE, 
      REMARK, REMARK2, REMARK3, 
      REMARK4, CONTENT)
    values (#{code,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{createDate,jdbcType=DATE}, 
      #{remark,jdbcType=VARCHAR}, #{remark2,jdbcType=VARCHAR}, #{remark3,jdbcType=VARCHAR}, 
      #{remark4,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ye.business.hx.domain.InformedConsent" >
    insert into informed_consent
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        CODE,
      </if>
      <if test="title != null" >
        TITLE,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="remark2 != null" >
        REMARK2,
      </if>
      <if test="remark3 != null" >
        REMARK3,
      </if>
      <if test="remark4 != null" >
        REMARK4,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null" >
        #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null" >
        #{remark3,jdbcType=VARCHAR},
      </if>
      <if test="remark4 != null" >
        #{remark4,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ye.business.hx.domain.InformedConsent" >
    update informed_consent
    <set >
      <if test="title != null" >
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null" >
        REMARK2 = #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null" >
        REMARK3 = #{remark3,jdbcType=VARCHAR},
      </if>
      <if test="remark4 != null" >
        REMARK4 = #{remark4,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        CONTENT = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where CODE = #{code,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ye.business.hx.domain.InformedConsent" >
    update informed_consent
    set TITLE = #{title,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=DATE},
      REMARK = #{remark,jdbcType=VARCHAR},
      REMARK2 = #{remark2,jdbcType=VARCHAR},
      REMARK3 = #{remark3,jdbcType=VARCHAR},
      REMARK4 = #{remark4,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=LONGVARCHAR}
    where CODE = #{code,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ye.business.hx.domain.InformedConsent" >
    update informed_consent
    set TITLE = #{title,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=DATE},
      REMARK = #{remark,jdbcType=VARCHAR},
      REMARK2 = #{remark2,jdbcType=VARCHAR},
      REMARK3 = #{remark3,jdbcType=VARCHAR},
      REMARK4 = #{remark4,jdbcType=VARCHAR}
    where CODE = #{code,jdbcType=VARCHAR}
  </update>
  
  <select id="findInformedConsentPage" parameterType="com.ye.business.hx.dto.FindInformedConsentPage" resultMap="findResultMap">
  	select <include refid="Base_Column_List"/>
  	from informed_consent
  	order by CREATE_DATE desc
  	limit ${start} , ${limit}
  </select>
  
  <select id="findInformedConsentPageCount" parameterType="com.ye.business.hx.dto.FindInformedConsentPage">
  	select count(*)
  	from informed_consent
  </select>
</mapper>